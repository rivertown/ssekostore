<?php
/**
 * Magento responsive theme
 *
 * @category    design
 * @package     bootstrapped_default
 * @copyright   Copyright (c) 2012 Magenthon (http://magenthon.com)
 * @license     http://opensource.org/licenses/afl-3.0.php  Academic Free License (AFL 3.0)
 * @author      Vedran Subotic <vedran@magenthon.com>
 */
?>

<?php
$_product    = $this->getProduct();
$_attributes = Mage::helper('core')->decorateArray($this->getAllowAttributes());
?>
<?php if ($_product->isSaleable() && count($_attributes)):?>
    <fieldset>
    <?php foreach($_attributes as $_attribute): ?>
        <label class="required"><em>*</em><?php echo $_attribute->getLabel() ?></label>
        <div<?php if ($_attribute->decoratedIsLast){?> class="last"<?php }?>>
            <div class="controls">
                <select name="super_attribute[<?php echo $_attribute->getAttributeId() ?>]" id="attribute<?php echo $_attribute->getAttributeId() ?>" class="span2 required-entry super-attribute-select">
                    <option><?php echo $this->__('Select '.$_attribute->getLabel()) ?></option>
                  </select>
              </div>
        </div>
    <?php endforeach; ?>
    </fieldset>
    <script type="text/javascript">
        var spConfig = new Product.Config(<?php echo $this->getJsonConfig() ?>);
        //select dropdown based on base color selected
        jQuery('.base-block li').click(function(){
			var dropdown = jQuery('#attribute' + jQuery('.base-block').attr('id'));
			dropdown.val(jQuery(this).attr('id'));
			//element must be the prototype object to pass to configureElement
            var element=$('attribute' + jQuery('.base-block').attr('id'));
			spConfig.configureElement(element);
		});
    </script>
<?php endif;?>
